#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Peach Spell Card 1"]
#Text["TESTING SPELL PATTERN 1"]
#Background["script/Peach/Peach Background.txt"]

#include "/script/Peach/ZUNShot/ZUNShot_Const.txt"
#include "./[library] boss.txt"

let atk1SE = scriptDir ~ "se_tan02.wav"; // Calls sound effect for raining hearts
let atk2SE = scriptDir ~ "se_kira00.wav"; // Calls sound effect for circles

let bossObj;

@Initialize {
	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(bossObj);
	ObjMove_SetDestAtFrame(bossObj, GetStgFrameWidth() / 2, 120, 60);
	
	TRenderBoss;
	TCutIn;
	TRainLoop;
	TCircleLoop;
	TEnd;
}

@Loading {
	LoadSound(atk1SE);
	LoadSound(atk2SE);
}

@Event {
	alternative(GetEventType())
	case (EV_REQUEST_LIFE()) {
		SetScriptResult(500);
	}
	
	case(EV_REQUEST_TIMER()) {
		SetScriptResult(60);
	}
	
	case(EV_REQUEST_SPELL_SCORE()) {
		SetScriptResult(1500000);
	}
}

@Finalize {
	
}

// ===== Functions =====

// ===== Tasks ======

// Fires a rain of red and blue hearts from the top border.
task TRainLoop {
	wait(180);
	while (!Obj_IsDeleted(bossObj)) {
		THeartShot(-110, 384);
		PlaySE(atk1SE);
		wait(35);
		THeartShot(-25, 386);
		PlaySE(atk1SE);
		wait(35);
	}
}

// Fires 4 waves of 15 small bullets that home in on the player, then moves
task TCircleLoop {
	let cx = GetStgFrameWidth() / 2;
	wait(120);
	while(ObjEnemy_GetInfo(bossObj, INFO_LIFE) > 0) {
		wait(80);
		TIceShot(0, -0.1, -1, 1);
		PlaySE(atk2SE);
		wait(8);
		TIceShot(45, -0.1, -1, 3);
		PlaySE(atk2SE);
		wait(8);
		TIceShot(90, -0.1, -1, 5);
		PlaySE(atk2SE);
		wait(8);
		TIceShot(135, -0.1, -1, 5);
		PlaySE(atk2SE);
		wait(8);
		ObjMove_SetDestAtSpeed(bossObj, rand(cx - 30, cx + 30), rand(60, 120), 2);
	}
}

// Takes in acceleration and negative speed for parameters
task TIceShot (angle, accel, minSpeed, delay) {
	let obj;
	
	loop (15) {
		obj = CreateShotA2(bossX + cos(angle), bossY + sin(angle), 5, angle, accel, minSpeed, 60, delay);
		ObjMove_AddPatternA4(obj, 60, 1, 0, 0.1, 0, 2, GetPlayerObjectID(), 64);
		angle += 360/15;
	}
}

// Creates cascading rows of hearts
task THeartShot (num, id) {
	loop(20) {
		CreateShotA1(0 + num, 0, 2, 90, id, 2);
		num += 55;
	}
}